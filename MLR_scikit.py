"""
    Implementation of Multinomial Logistic Regression using sci-kit learn packages
"""

import numpy as np
import pandas as pd
import sklearn.linear_model as lm

def obatinDataFromCSV():
    """
        Get data from a CSV file
    """
    pass

def splitData_TraningAndTest():
    """
        Split obtained data with given ratio
    """
    pass

def fitData_withSciKit(X,y):
    """
        Use scikit learn logistic regressions package to fit multinomial data
        This function will also create the sklearn object which holds the 
        predictor method.

        X = features matrix
        y = vector of labels

        returns:
        mlr_model: multinomial logistic regression model generated by sci-kit learn
    """

    mlr_model = lm.LogisticRegression.fit(X,y)
    return mlr_model

def prediction(mlr_model,x):
    """
        use fitted data to make predictions

        mlr_model = model generated (and already fitted) by sklearn logistic regression
        x = input features for which prediction is required; can be a vector of one sample
            or array of multiple samples
    """

    obtained_predictions = mlr_model.predict(x)

    if (len(obtained_predictions) == 1): #if only one sample was inputted need to only return the answer
        return obtained_predictions[0]
    
    return obtained_predictions #if multiple samples inputted then return the array and deal with ans in calling method
